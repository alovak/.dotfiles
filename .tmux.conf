# set-option -g default-command "reattach-to-user-namespace -l bash"
set -g prefix C-a
unbind C-a
bind C-a send-prefix
# use 256 colors
set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# enable italic
# set -g default-terminal "tmux-256color-italic"
# set-option -ga terminal-overrides ",xterm-256color-italic:Tc"
set-option -g history-limit 50000
# solve issue with unnamed * register in vim
# set -g default-shell /usr/local/bin/fish 
# set-option -g default-shell /bin/zsh

# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
setw -g mode-keys vi
set -g status-keys vi
# set -g default-path "$PWD"
# set-option default-path "$PWD"
# fix tmux issue with freezing MacOS and notify.d
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# keybindings to make resizing easier
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R
unbind n
bind n next-window
unbind p
bind p previous-window
unbind t
bind t new-window -c "#{pane_current_path}"
unbind r
bind r source-file ~/.tmux.conf
# use UTF-8
# set-window-option -g utf8 on
# screen like path behavior for new windows
# set -g default-path "$PWD"
# set-option default-path "$PWD"

set -g status on
set -g status-right ""
# set -g status-bg colour232
# set -g status-style fg=colour39,bg=colour232
# setw -g window-status-current-style fg=white,bg=colour39
set -g status-style fg="#61afef",bg=colour232
setw -g window-status-current-style fg=white,bg="#61afef"
set -g window-status-format         " #I #{=+15:window_name} "
set -g window-status-current-format " #I #{=+15:window_name} "

# delay between two characters in a command sequence
# set-option -sg escape-time 10
# pane movement
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key m command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"

# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# set-option -g status on
# enable mouse support
# set -g mouse on

set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape


set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'aserowy/tmux.nvim'

# set -g @tmux-nvim-navigation true
# set -g @tmux-nvim-navigation-cycle true
# set -g @tmux-nvim-navigation-keybinding-left 'C-h'
# set -g @tmux-nvim-navigation-keybinding-down 'C-j'
# set -g @tmux-nvim-navigation-keybinding-up 'C-k'
# set -g @tmux-nvim-navigation-keybinding-right 'C-l'


# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'



# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
